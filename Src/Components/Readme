이 디렉토리는 공통 컴포넌트들을 만들어 관리하는 곳입니다. 
**`components`** 디렉토리는 재사용 가능한 컴포넌트들을 모아놓는 디렉토리로, 프로젝트의 다양한 부분에서 사용될 수 있는 독립적인 UI 요소들을 관리합니다.
이 디렉토리에는 주로 일반적인 컴포넌트들이 위치하며, 해당 프로젝트의 다른 부분에서 여러 차례 사용할 수 있는 컴포넌트들을 만들어 두게 됩니다.

동일한 컴포넌트가 사용될 경우 이곳에서 생성해 사용합니다. 

**`components`** 디렉토리에는 다양한 종류의 컴포넌트들이 존재할 수 있습니다. 아래는 일반적으로 **`components`** 디렉토리에 위치할 수 있는 컴포넌트들의 예시입니다.

1. **버튼 컴포넌트:**
    - 앱 전체에서 여러 곳에서 사용되는 스타일이나 기능을 포함한 재사용 가능한 버튼 컴포넌트를 만듭니다.
    - 예시: **`<Button>`**, **`<IconButton>`**, **`<SubmitButton>`** , `**<TouchabalOpacity>**`등
2. **헤더 컴포넌트:**
    - 앱 상단에 공통으로 사용되는 헤더 컴포넌트를 만듭니다.
    - 예시: **`<Header>`**, **`<AppHeader>`**, **`<Navbar>`** 등
3. **인풋 컴포넌트:**
    - 텍스트 입력이나 사용자 입력을 받기 위한 인풋 컴포넌트를 만듭니다.
    - 예시: **`<TextInput>`**, **`<Checkbox>`**, **`<DatePicker>`** 등
4. **카드 컴포넌트:**
    - 목록이나 데이터를 카드 형태로 보여주는 컴포넌트를 만듭니다.
    - 예시: **`<Card>`**, **`<ProductCard>`**, **`<UserCard>`** 등
5. **알림 컴포넌트:**
    - 사용자에게 메시지, 경고, 알림 등을 보여주는 컴포넌트를 만듭니다.
    - 예시: **`<Alert>`**, **`<Notification>`**, **`<Snackbar>`** 등
6. **로딩 컴포넌트:**
    - 데이터를 로딩할 때 보여주는 로딩 스피너 등의 컴포넌트를 만듭니다.
    - 예시: **`<LoadingSpinner>`**, **`<ProgressBar>`**, **`<ActivityIndicator>`** 등
7. **모달 컴포넌트:**
    - 앱 내에서 모달창을 표시하는 컴포넌트를 만듭니다.
    - 예시: **`<Modal>`**, **`<Popup>`**, **`<Dialog>`** 등
8. **아이콘 컴포넌트:**
    - 아이콘 폰트 또는 이미지 아이콘들을 사용하는 컴포넌트를 만듭니다.
    - 예시: **`<Icon>`**, **`<FontAwesomeIcon>`**, **`<MaterialIcon>`** 등



-----------------------------------------------------------------------------------------------    

사용하게 될 주요 모듈 및 라이브러리 

PureComponent + FlatList -> 실시간 비동기화 데이터 처리 작업을 효율적으로 하기 위함.

map -> 배열 형식의 데이터를 순차대로 출력 해주기 위함.

<Video/> -> 로딩 스크린 구현을 위함.

Dimensions + Platform.OS -> android 와 ios 의 디자인 가이드라인 차이점을 파악하고 차이가 있는 부분에 대하여 공통적인 UI를 보여주기 위함이며 반응형 디자인의 구현을 하기 위함 입니다. 

옵셔널 체이닝 연산자 -> 관리자의 권한이 있는 사용자와 관리자 권한이 없는 일반 사용자의 데이터 정보에 따라 특정 버튼을 보여주거나 숨길 수 있습니다.

react-native-calendars -> 일정 스크린

@expo/react-native-read-more-text -> 게시글 또는 댓글의 미리보기 기능을 제공하기 위함 입니다. 

resizeMode = "contain" -> 이미지를 효율적으로 처리하고 일정 영역에 정확하게 이미지를 출력 해주기 위함.